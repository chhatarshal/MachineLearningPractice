# -*- coding: utf-8 -*-
"""NthDigitProblem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H8goN27T8RoqlVdSuuFKwD-YPyfT0CII
"""


"""
Problem:  Given an integer n, return the nth digit of the infinite integer sequence [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...].

Input: n = 11
Output: 0
Explanation: The 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.
"""

def findNthDigit(n):
  digit = 1
  digits_interval =9  
  while n - digits_interval > 0:
    n = n - digits_interval
    digit = digit + 1
    digits_interval = 10**(digit - 1)*9*digit
    if digits_interval < 0:
      break  
  base = 10**(digit-1)
  number = base + int((n - 1) / digit)   

  return str(number)[((n - 1) % digit)]
  #return number

findNthDigit(83)

10**0*9

